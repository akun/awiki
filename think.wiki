%toc
%title akun's Wiki - 设计杂感

= 设计杂感 =

== Command-Query Separation (CQS) – 命令-查询分离原则 ==

* 查询：当一个方法返回一个值来回应一个问题的时候，它就具有查询的性质；
* 命令：当一个方法要改变对象的状态的时候，它就具有命令的性质；
* 通常，一个方法可能是纯的Command模式或者是纯的Query模式，或者是两者的混合体。在设计接口时，如果可能，应该尽量使接口单一化，保证方法的行为严格的是命令或者是查询，这样查询方法不会改变对象的状态，没有副作用，而会改变对象的状态的方法不可能有返回值。也就是说：如果我们要问一个问题，那么就不应该影响到它的答案。实际应用，要视具体情况而定，语义的清晰性和使用的简单性之间需要权衡。将Command和Query功能合并入一个方法，方便了客户的使用，但是，降低了清晰性，而且，可能不便于基于断言的程序设计并且需要一个变量来保存查询结果。

== 程序设计 ==

* 每个程序，三个纵向、通用维度的考虑：日志、自测试、性能统计，应该还有更多的考虑维度

== 数据处理 ==

* 冷热数据分离，lazy data
* 根据业务来
  * 明确系统的哪些数据的可选性高
  * 明确常用数据集尽量小
  * 多使用explain查看查询语句的性能，决定是否在可选性高的字段上建立索引
  * 尽量确保索引偏小
* 清单A和清单B库撞
